language: java
jdk:
    - openjdk8

# master branch에 push 될 때만 수행
branches:
    only:
        - master
# Travis CI 서버의 홈
# 의존성은 다음 배포 때부터 다시 받지 않도록 설정해놓는 것.
cache:
    directories:
        - '$HOME/.m2/repository'
        - '$HOME/.gradle'

# master branch 에 푸시되었을 때 수행하는 명령어임
script: "./gradlew clean build"

  
# Jar 파일을 S3에 올릴 수 있도록 설정
before_deploy:
    - mkdir -p before-deploy # zip에 포함시킬 파일들을 담을 디렉토리 생성
    - cp scripts/*.sh before-deploy/
    - cp appspec.yml before-deploy/
    - cp build/libs/*.jar before-deploy/
    - cd before-deploy && zip -r before-deploy * # before-deploy로 이동후 전체 압축
    - cd ../ && mkdir -p deploy # 상위 디렉토리로 이동후 deploy 디렉토리 생성
    - mv before-deploy/before-deploy.zip deploy/springboot-webservice.zip # deploy로 zip파일 이동




deploy:  # 외부 서비스와 연동될 행위들을 선언하는 곳
    - provider: s3
      access_key_id: $AWS_ACCESS_KEY # Travis repo settings에 설정된 값
      secret_access_key: $AWS_SECRET_KEY
      bucket: annmyongjin-springboot-webservice-build
      region: ap-northeast-2
      skip_cleanup: ture
      acl: private # zip 파일 접근 권한 : private
      local_dir: deploy # befor_deploy에서 생성한 directory, 이 위치의 파일들만 S3로 전송
      wait-until-deployed: true
    

    - provider: codedeploy
      access_key_id: $AWS_ACCESS_KEY
      secret_access_key: $AWS_SECRET_KEY
      bucket: annmyongjin-springboot-webservice-build
      key: springboot_webservice_cicd.zip
      bundle_type: zip
      application: springboot-webservice
      deployment_group: springboot-webservice-group
      region: ap-northeast-2
      wait-until-deployed: true
    
# CI 실행 완료 시 메일로 알람
notifications:
    email:
        recipients:
            - annmyongjin7782@gmail.com
